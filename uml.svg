<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2681px" height="1022px" viewBox="-0.5 -0.5 2681 1022" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-08-02T17:22:40.313Z&quot; agent=&quot;5.0 (Windows)&quot; etag=&quot;ZwZGehAZuVev4Ad-X4rz&quot; version=&quot;20.2.2&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-1609-281-552-64-0"><rect x="1609" y="281" width="552" height="64"/></clipPath><clipPath id="mx-clip-1609-353-552-92-0"><rect x="1609" y="353" width="552" height="92"/></clipPath><clipPath id="mx-clip-1197-31-699-44-0"><rect x="1197" y="31" width="699" height="44"/></clipPath><clipPath id="mx-clip-1197-83-699-52-0"><rect x="1197" y="83" width="699" height="52"/></clipPath><clipPath id="mx-clip-1784-513-202-52-0"><rect x="1784" y="513" width="202" height="52"/></clipPath><clipPath id="mx-clip-1004-299-452-66-0"><rect x="1004" y="299" width="452" height="66"/></clipPath><clipPath id="mx-clip-1944-98-202-42-0"><rect x="1944" y="98" width="202" height="42"/></clipPath><clipPath id="mx-clip-724-61-382-64-0"><rect x="724" y="61" width="382" height="64"/></clipPath><clipPath id="mx-clip-724-133-382-52-0"><rect x="724" y="133" width="382" height="52"/></clipPath><clipPath id="mx-clip-724-263-202-42-0"><rect x="724" y="263" width="202" height="42"/></clipPath><clipPath id="mx-clip-4-461-552-134-0"><rect x="4" y="461" width="552" height="134"/></clipPath><clipPath id="mx-clip-4-603-552-152-0"><rect x="4" y="603" width="552" height="152"/></clipPath><clipPath id="mx-clip-174-833-212-42-0"><rect x="174" y="833" width="212" height="42"/></clipPath><clipPath id="mx-clip-694-526-632-44-0"><rect x="694" y="526" width="632" height="44"/></clipPath><clipPath id="mx-clip-694-578-632-92-0"><rect x="694" y="578" width="632" height="92"/></clipPath><clipPath id="mx-clip-694-869-632-46-0"><rect x="694" y="869" width="632" height="46"/></clipPath><clipPath id="mx-clip-1384-869-632-46-0"><rect x="1384" y="869" width="632" height="46"/></clipPath><clipPath id="mx-clip-2044-868-632-46-0"><rect x="2044" y="868" width="632" height="46"/></clipPath><clipPath id="mx-clip-2044-749-632-46-0"><rect x="2044" y="749" width="632" height="46"/></clipPath></defs><g><path d="M 1260 130 L 1260 160 L 1260 260" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1546.5 130 L 1546.5 190 L 1885 190 L 1885 250" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1605 276 L 1605 250 L 2165 250 L 2165 276" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1605 276 L 1605 440 L 2165 440 L 2165 276" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1605 276 L 2165 276" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1884.5" y="267.5">Board</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1609-281-552-64-0)" font-size="12px"><text x="1610.5" y="293.5">+ const width: uint16_t</text><text x="1610.5" y="307.5">+ const height: uint16_t</text><text x="1610.5" y="321.5">- m_cells: std::unique_ptr&lt;CellState[]&gt;</text></g><path d="M 1605 344 L 2165 344" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1609-353-552-92-0)" font-size="12px"><text x="1610.5" y="365.5">+ Board()</text><text x="1610.5" y="379.5">+ getColumn(column: uint8_t) const: Column&amp;</text><text x="1610.5" y="393.5">+ advanceRunnersMarkers(actor: const ActorEnum, combination: const DiceCombination&amp;): void</text><text x="1610.5" y="407.5">+ resetRunnerMarkers(): void</text><text x="1610.5" y="421.5">+ applyRunnerOffsetsToActorMarkersAndCheckWin(actor: const ActorEnum): bool</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 225px; margin-left: 1891px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">1</div></div></div></foreignObject><text x="1910" y="229" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><path d="M 1192.89 26 L 1192.89 0 L 1900 0 L 1900 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1192.89 26 L 1192.89 130 L 1900 130 L 1900 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1192.89 26 L 1900 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1545.94" y="17.5">Game</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1197-31-699-44-0)" font-size="12px"><text x="1198.39" y="43.5">- m_actors: const std::shared_ptr&lt;Actor&gt;[]</text><text x="1198.39" y="57.5">- m_board: Board</text></g><path d="M 1192.89 74 L 1900 74" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1197-83-699-52-0)" font-size="12px"><text x="1198.39" y="95.5">+ Game(actor1:std::shared_ptr&lt;Actor&gt;&amp;, actor2:std::shared_ptr&lt;Actor&gt;&amp;)</text><text x="1198.39" y="109.5">+ run(): ActorEnum</text></g><path d="M 1780 500 L 1780 460 L 1990 460 L 1990 500" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1780 500 L 1780 560 L 1990 560 L 1990 500" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1780 500 L 1990 500" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1884.5" y="477.5">&lt;&lt;struct&gt;&gt; Column</text></g><path d="M 1780 504 L 1990 504" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1784-513-202-52-0)" font-size="12px"><text x="1785.5" y="525.5">+ actor1Markers: uint8_t</text><text x="1785.5" y="539.5">+ actor2Markers: uint8_t</text><text x="1785.5" y="553.5">+ runnerOffset: uint8_t</text></g><path d="M 1885 440 L 1885 460" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 286 L 1000 260 L 1460 260 L 1460 286" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 286 L 1000 360 L 1460 360 L 1460 286" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 286 L 1460 286" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1229.5" y="277.5">&lt;&lt;abstract&gt;&gt; Actor</text></g><path d="M 1000 290 L 1460 290" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1004-299-452-66-0)" font-size="12px"><text x="1005.5" y="311.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;): uint8_t</text><text x="1005.5" y="325.5">+ finishedTurn(board: const Board&amp;): bool</text><text x="1005.5" y="339.5">+ setActorEnum(actorEnum: ActorEnum): void</text><text x="1005.5" y="353.5">+ getActorEnum const: ActorEnum</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 43px; height: 1px; padding-top: 245px; margin-left: 1251px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">2</div></div></div></foreignObject><text x="1272" y="249" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><path d="M 1940 85 L 1940 45 L 2150 45 L 2150 85" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1940 85 L 1940 135 L 2150 135 L 2150 85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1940 85 L 2150 85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2044.5" y="62.5">&lt;&lt;enum&gt;&gt; ActorEnum</text></g><path d="M 1940 89 L 2150 89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1944-98-202-42-0)" font-size="12px"><text x="1945.5" y="110.5">ACTOR1</text><text x="1945.5" y="124.5">ACTOR2</text></g><path d="M 1940 90 L 1920 90 L 1920 65 L 1900 65" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 720 30 L 1110 30 L 1110 56" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 720 180 L 1110 180 L 1110 56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 1110 56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="914.5" y="47.5">DiceThrow</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-61-382-64-0)" font-size="12px"><text x="725.5" y="73.5">- m_dice: const uint8_t[4]</text><text x="725.5" y="87.5">- m_combinations: Combination[6]</text><text x="725.5" y="101.5">- m_combinationCount: uint8_t</text><text x="725.5" y="115.5">- insertCombination(a: uint8_t, b: uint8_t): void</text></g><path d="M 720 124 L 1110 124" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-133-382-52-0)" font-size="12px"><text x="725.5" y="145.5">+ DiceThrow(board: const Board&amp;, currentActor: const ActorEnum)</text><text x="725.5" y="159.5">+ getDice(diceID: uint8_t) const: uint8_t</text><text x="725.5" y="173.5">+ getCombination(combinationID: uint8_t) const: const Combination&amp;</text></g><path d="M 720 250 L 720 210 L 930 210 L 930 250" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 250 L 720 300 L 930 300 L 930 250" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 250 L 930 250" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="824.5" y="227.5">&lt;&lt;struct&gt;&gt; DiceCombination</text></g><path d="M 720 254 L 930 254" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-263-202-42-0)" font-size="12px"><text x="725.5" y="275.5">+ a: const uint8_t</text><text x="725.5" y="289.5">+ b: const uint8_t</text></g><path d="M 880 210 L 880 190 L 880 180" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 195px; margin-left: 861px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">6</div></div></div></foreignObject><text x="890" y="199" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">6</text></switch></g><path d="M 1110 88 L 1192.89 88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 456 L 0 430 L 560 430 L 560 456" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 456 L 0 750 L 560 750 L 560 456" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 456 L 560 456" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="279.5" y="447.5">GameRound</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-461-552-134-0)" font-size="12px"><text x="5.5" y="473.5">- m_nextStep: NextStep</text><text x="5.5" y="487.5">- m_currentActor: ActorEnum</text><text x="5.5" y="501.5">- m_isOver: bool</text><text x="5.5" y="515.5">- m_chosenCombinationID: uint8_t</text><text x="5.5" y="529.5">- m_rand: MersenneTwister</text><text x="5.5" y="543.5">- m_board: Board</text><text x="5.5" y="557.5">- m_actor1: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="571.5">- m_actor2: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="585.5">- m_diceThrow: DiceThrow</text></g><path d="M 0 594 L 560 594" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-603-552-152-0)" font-size="12px"><text x="5.5" y="615.5">+ GameRound()</text><text x="5.5" y="629.5">+ getBoard() const: const Board&amp;</text><text x="5.5" y="643.5">+ getCurrentActorEnum() const: ActorEnum</text><text x="5.5" y="657.5">+ getCurrentActor() const: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="671.5">+ getActor(actor: ActorEnum) const: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="685.5">+ getDiceThrow const: const DiceThrow&amp;</text><text x="5.5" y="699.5">+ getChosenCombinationID() const: uint8_t</text><text x="5.5" y="713.5">+ isOver() const: bool</text><text x="5.5" y="727.5">+ getNextStep() const: NextStep</text><text x="5.5" y="741.5">+ nextStep: void</text></g><path d="M 170 820 L 170 780 L 390 780 L 390 820" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 170 820 L 170 870 L 390 870 L 390 820" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 170 820 L 390 820" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="279.5" y="797.5">&lt;&lt;enum&gt;&gt; NextStep</text></g><path d="M 170 824 L 390 824" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-174-833-212-42-0)" font-size="12px"><text x="175.5" y="845.5">CHOOSE_DICE_COMBINATION</text><text x="175.5" y="859.5">CHOOSE_TO_CONTINUE_OR_STOP</text></g><path d="M 280 780 L 280 760 L 280 770 L 280 750" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 521 L 690 495 L 1330 495 L 1330 521" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 521 L 690 665 L 1330 665 L 1330 521" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 521 L 1330 521" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1009.5" y="512.5">Player</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-526-632-44-0)" font-size="12px"><text x="695.5" y="538.5">- m_combination: uint8_t</text><text x="695.5" y="552.5">- m_finished: bool</text></g><path d="M 690 569 L 1330 569" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-578-632-92-0)" font-size="12px"><text x="695.5" y="590.5">+ setReturnValueForChooseCombination(combination: uint8_t): void</text><text x="695.5" y="604.5">+ setReturnValueForFinishedTurn(finished: bool): void</text><text x="695.5" y="632.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="695.5" y="646.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool</text></g><path d="M 1380 636 L 1380 610 L 2020 610 L 2020 636" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 636 L 1380 644 L 2020 644 L 2020 636" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 636 L 2020 636" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1699.5" y="627.5">Bot</text></g><path d="M 1380 640 L 2020 640" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 610 L 1700 485 L 1290 485 L 1290 366.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1290 361.12 L 1293.5 368.12 L 1290 366.37 L 1286.5 368.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 495 L 1010 427 L 1150 427 L 1150 366.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1150 361.12 L 1153.5 368.12 L 1150 366.37 L 1146.5 368.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 690 830 L 1330 830 L 1330 856" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 690 910 L 1330 910 L 1330 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 1330 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1009.5" y="847.5">GreedyBot</text></g><path d="M 690 860 L 1330 860" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-869-632-46-0)" font-size="12px"><text x="695.5" y="881.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="695.5" y="895.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 1380 856 L 1380 830 L 2020 830 L 2020 856" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 856 L 1380 910 L 2020 910 L 2020 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 856 L 2020 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1699.5" y="847.5">RandomBot</text></g><path d="M 1380 860 L 2020 860" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1384-869-632-46-0)" font-size="12px"><text x="1385.5" y="881.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="1385.5" y="895.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2040 855 L 2040 829 L 2680 829 L 2680 855" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 855 L 2040 909 L 2680 909 L 2680 855" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 855 L 2680 855" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2359.5" y="846.5">SafeBot</text></g><path d="M 2040 859 L 2680 859" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-868-632-46-0)" font-size="12px"><text x="2045.5" y="880.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="2045.5" y="894.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2040 750 L 1700 750 L 1700 650.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 645.12 L 1703.5 652.12 L 1700 650.37 L 1696.5 652.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2040 710 L 2680 710 L 2680 736" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2040 790 L 2680 790 L 2680 736" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2680 736" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2359.5" y="727.5">SmartBot</text></g><path d="M 2040 740 L 2680 740" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-749-632-46-0)" font-size="12px"><text x="2045.5" y="761.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="2045.5" y="775.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2360 829 L 2360 810 L 1700 810 L 1700 650.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 645.12 L 1703.5 652.12 L 1700 650.37 L 1696.5 652.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 830 L 1700 650.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 645.12 L 1703.5 652.12 L 1700 650.37 L 1696.5 652.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 830 L 1010 810 L 1700 810 L 1700 650.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 645.12 L 1703.5 652.12 L 1700 650.37 L 1696.5 652.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>