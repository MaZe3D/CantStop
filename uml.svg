<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="4251px" height="1084px" viewBox="-0.5 -0.5 4251 1084" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-08-02T19:26:31.336Z&quot; agent=&quot;5.0 (Windows)&quot; etag=&quot;vz8yE9elTpIQyMBOxi6x&quot; version=&quot;20.2.2&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-1609-401-552-64-0"><rect x="1609" y="401" width="552" height="64"/></clipPath><clipPath id="mx-clip-1609-473-552-92-0"><rect x="1609" y="473" width="552" height="92"/></clipPath><clipPath id="mx-clip-1197-31-699-154-0"><rect x="1197" y="31" width="699" height="154"/></clipPath><clipPath id="mx-clip-1197-193-699-52-0"><rect x="1197" y="193" width="699" height="52"/></clipPath><clipPath id="mx-clip-1784-653-202-52-0"><rect x="1784" y="653" width="202" height="52"/></clipPath><clipPath id="mx-clip-1004-419-452-66-0"><rect x="1004" y="419" width="452" height="66"/></clipPath><clipPath id="mx-clip-1944-98-202-42-0"><rect x="1944" y="98" width="202" height="42"/></clipPath><clipPath id="mx-clip-724-61-382-64-0"><rect x="724" y="61" width="382" height="64"/></clipPath><clipPath id="mx-clip-724-133-382-52-0"><rect x="724" y="133" width="382" height="52"/></clipPath><clipPath id="mx-clip-724-263-202-42-0"><rect x="724" y="263" width="202" height="42"/></clipPath><clipPath id="mx-clip-4-461-552-134-0"><rect x="4" y="461" width="552" height="134"/></clipPath><clipPath id="mx-clip-4-603-552-152-0"><rect x="4" y="603" width="552" height="152"/></clipPath><clipPath id="mx-clip-174-833-212-42-0"><rect x="174" y="833" width="212" height="42"/></clipPath><clipPath id="mx-clip-694-646-632-44-0"><rect x="694" y="646" width="632" height="44"/></clipPath><clipPath id="mx-clip-694-698-632-92-0"><rect x="694" y="698" width="632" height="92"/></clipPath><clipPath id="mx-clip-694-869-632-46-0"><rect x="694" y="869" width="632" height="46"/></clipPath><clipPath id="mx-clip-1384-869-632-46-0"><rect x="1384" y="869" width="632" height="46"/></clipPath><clipPath id="mx-clip-2044-868-632-46-0"><rect x="2044" y="868" width="632" height="46"/></clipPath><clipPath id="mx-clip-2044-749-632-46-0"><rect x="2044" y="749" width="632" height="46"/></clipPath><clipPath id="mx-clip-3514-127-462-114-0"><rect x="3514" y="127" width="462" height="114"/></clipPath><clipPath id="mx-clip-3514-249-462-382-0"><rect x="3514" y="249" width="462" height="382"/></clipPath><clipPath id="mx-clip-4034-155-152-84-0"><rect x="4034" y="155" width="152" height="84"/></clipPath><clipPath id="mx-clip-2854-31-622-134-0"><rect x="2854" y="31" width="622" height="134"/></clipPath><clipPath id="mx-clip-2854-173-622-342-0"><rect x="2854" y="173" width="622" height="342"/></clipPath><clipPath id="mx-clip-2844-571-452-84-0"><rect x="2844" y="571" width="452" height="84"/></clipPath><clipPath id="mx-clip-2844-663-452-82-0"><rect x="2844" y="663" width="452" height="82"/></clipPath><clipPath id="mx-clip-3376-711-572-24-0"><rect x="3376" y="711" width="572" height="24"/></clipPath><clipPath id="mx-clip-3376-743-572-102-0"><rect x="3376" y="743" width="572" height="102"/></clipPath><clipPath id="mx-clip-2934-796-342-24-0"><rect x="2934" y="796" width="342" height="24"/></clipPath><clipPath id="mx-clip-2934-828-342-32-0"><rect x="2934" y="828" width="342" height="32"/></clipPath><clipPath id="mx-clip-3202-909-332-66-0"><rect x="3202" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-2854-909-332-66-0"><rect x="2854" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-3554-909-332-66-0"><rect x="3554" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-3914-909-332-66-0"><rect x="3914" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-2854-1019-332-66-0"><rect x="2854" y="1019" width="332" height="66"/></clipPath></defs><g><path d="M 1460 240 L 1460 380" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1546.47 240 L 1546.47 305.06 L 1885.06 305.06 L 1885.06 370" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1605 396 L 1605 370 L 2165 370 L 2165 396" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1605 396 L 1605 560 L 2165 560 L 2165 396" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1605 396 L 2165 396" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1884.5" y="387.5">Board</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1609-401-552-64-0)" font-size="12px"><text x="1610.5" y="413.5">+ const width: uint16_t</text><text x="1610.5" y="427.5">+ const height: uint16_t</text><text x="1610.5" y="441.5">- m_cells: std::unique_ptr&lt;CellState[]&gt;</text></g><path d="M 1605 464 L 2165 464" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1609-473-552-92-0)" font-size="12px"><text x="1610.5" y="485.5">+ Board()</text><text x="1610.5" y="499.5">+ getColumn(column: uint8_t) const: Column&amp;</text><text x="1610.5" y="513.5">+ advanceRunnersMarkers(actor: const ActorEnum, combination: const DiceCombination&amp;): void</text><text x="1610.5" y="527.5">+ resetRunnerMarkers(): void</text><text x="1610.5" y="541.5">+ applyRunnerOffsetsToActorMarkersAndCheckWin(actor: const ActorEnum): bool</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 345px; margin-left: 1891px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">1</div></div></div></foreignObject><text x="1910" y="349" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><path d="M 1192.89 26 L 1192.89 0 L 1900 0 L 1900 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1192.89 26 L 1192.89 240 L 1900 240 L 1900 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1192.89 26 L 1900 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1545.94" y="17.5">Game</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1197-31-699-154-0)" font-size="12px"><text x="1198.39" y="43.5">- m_window: const std::shared_ptr&lt;Window&gt; </text><text x="1198.39" y="57.5">- m_font1: const std::shared_ptr&lt;const Font&gt; </text><text x="1198.39" y="71.5">- m_font2: const std::shared_ptr&lt;const Font&gt; </text><text x="1198.39" y="85.5">- m_menu: Menu</text><text x="1198.39" y="99.5">- m_gameRoundDrawer: GameRoundDrawer</text><text x="1198.39" y="113.5">- m_gameState: GameState </text><text x="1198.39" y="127.5">- render(): void</text><text x="1198.39" y="141.5">- onWindowClosed() override: void</text><text x="1198.39" y="155.5">- onLeftClick(x: int32_t, y: int32_t) override: void</text><text x="1198.39" y="169.5">- onWindowResized(width: int32_t, height: int32_t) override: void </text></g><path d="M 1192.89 184 L 1900 184" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1197-193-699-52-0)" font-size="12px"><text x="1198.39" y="205.5">+ Game(actor1:std::shared_ptr&lt;Actor&gt;&amp;, actor2:std::shared_ptr&lt;Actor&gt;&amp;)</text><text x="1198.39" y="219.5">+ run(): void</text><text x="1198.39" y="233.5">+ startNewRound(round: const std::shared_ptr&lt;GameRound&gt;&amp;): void</text></g><path d="M 1780 640 L 1780 600 L 1990 600 L 1990 640" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1780 640 L 1780 700 L 1990 700 L 1990 640" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1780 640 L 1990 640" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1884.5" y="617.5">&lt;&lt;struct&gt;&gt; Column</text></g><path d="M 1780 644 L 1990 644" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1784-653-202-52-0)" font-size="12px"><text x="1785.5" y="665.5">+ actor1Markers: uint8_t</text><text x="1785.5" y="679.5">+ actor2Markers: uint8_t</text><text x="1785.5" y="693.5">+ runnerOffset: uint8_t</text></g><path d="M 1885.06 560 L 1885.06 580 L 1885.06 600" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 406 L 1000 380 L 1460 380 L 1460 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 406 L 1000 480 L 1460 480 L 1460 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 406 L 1460 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1229.5" y="397.5">&lt;&lt;abstract&gt;&gt; Actor</text></g><path d="M 1000 410 L 1460 410" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1004-419-452-66-0)" font-size="12px"><text x="1005.5" y="431.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;): uint8_t</text><text x="1005.5" y="445.5">+ finishedTurn(board: const Board&amp;): bool</text><text x="1005.5" y="459.5">+ setActorEnum(actorEnum: ActorEnum): void</text><text x="1005.5" y="473.5">+ getActorEnum const: ActorEnum</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 43px; height: 1px; padding-top: 365px; margin-left: 1251px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">2</div></div></div></foreignObject><text x="1272" y="369" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><path d="M 1940 85 L 1940 45 L 2150 45 L 2150 85" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1940 85 L 1940 135 L 2150 135 L 2150 85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1940 85 L 2150 85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2044.5" y="62.5">&lt;&lt;enum&gt;&gt; ActorEnum</text></g><path d="M 1940 89 L 2150 89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1944-98-202-42-0)" font-size="12px"><text x="1945.5" y="110.5">ACTOR1</text><text x="1945.5" y="124.5">ACTOR2</text></g><path d="M 1940 90 L 1920 90 L 1920 120 L 1900 120" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 720 30 L 1110 30 L 1110 56" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 720 180 L 1110 180 L 1110 56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 1110 56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="914.5" y="47.5">DiceThrow</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-61-382-64-0)" font-size="12px"><text x="725.5" y="73.5">- m_dice: const uint8_t[4]</text><text x="725.5" y="87.5">- m_combinations: Combination[6]</text><text x="725.5" y="101.5">- m_combinationCount: uint8_t</text><text x="725.5" y="115.5">- insertCombination(a: uint8_t, b: uint8_t): void</text></g><path d="M 720 124 L 1110 124" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-133-382-52-0)" font-size="12px"><text x="725.5" y="145.5">+ DiceThrow(board: const Board&amp;, currentActor: const ActorEnum)</text><text x="725.5" y="159.5">+ getDice(diceID: uint8_t) const: uint8_t</text><text x="725.5" y="173.5">+ getCombination(combinationID: uint8_t) const: const Combination&amp;</text></g><path d="M 720 250 L 720 210 L 930 210 L 930 250" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 250 L 720 300 L 930 300 L 930 250" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 250 L 930 250" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="824.5" y="227.5">&lt;&lt;struct&gt;&gt; DiceCombination</text></g><path d="M 720 254 L 930 254" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-263-202-42-0)" font-size="12px"><text x="725.5" y="275.5">+ a: const uint8_t</text><text x="725.5" y="289.5">+ b: const uint8_t</text></g><path d="M 880 210 L 880 190 L 880 180" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 195px; margin-left: 861px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">6</div></div></div></foreignObject><text x="890" y="199" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">6</text></switch></g><path d="M 1110 88 L 1192.89 88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 456 L 0 430 L 560 430 L 560 456" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 456 L 0 750 L 560 750 L 560 456" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 0 456 L 560 456" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="279.5" y="447.5">GameRound</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-461-552-134-0)" font-size="12px"><text x="5.5" y="473.5">- m_nextStep: NextStep</text><text x="5.5" y="487.5">- m_currentActor: ActorEnum</text><text x="5.5" y="501.5">- m_isOver: bool</text><text x="5.5" y="515.5">- m_chosenCombinationID: uint8_t</text><text x="5.5" y="529.5">- m_rand: MersenneTwister</text><text x="5.5" y="543.5">- m_board: Board</text><text x="5.5" y="557.5">- m_actor1: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="571.5">- m_actor2: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="585.5">- m_diceThrow: DiceThrow</text></g><path d="M 0 594 L 560 594" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4-603-552-152-0)" font-size="12px"><text x="5.5" y="615.5">+ GameRound()</text><text x="5.5" y="629.5">+ getBoard() const: const Board&amp;</text><text x="5.5" y="643.5">+ getCurrentActorEnum() const: ActorEnum</text><text x="5.5" y="657.5">+ getCurrentActor() const: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="671.5">+ getActor(actor: ActorEnum) const: std::shared_ptr&lt;Actor&gt;</text><text x="5.5" y="685.5">+ getDiceThrow const: const DiceThrow&amp;</text><text x="5.5" y="699.5">+ getChosenCombinationID() const: uint8_t</text><text x="5.5" y="713.5">+ isOver() const: bool</text><text x="5.5" y="727.5">+ getNextStep() const: NextStep</text><text x="5.5" y="741.5">+ nextStep: void</text></g><path d="M 170 820 L 170 780 L 390 780 L 390 820" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 170 820 L 170 870 L 390 870 L 390 820" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 170 820 L 390 820" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="279.5" y="797.5">&lt;&lt;enum&gt;&gt; NextStep</text></g><path d="M 170 824 L 390 824" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-174-833-212-42-0)" font-size="12px"><text x="175.5" y="845.5">CHOOSE_DICE_COMBINATION</text><text x="175.5" y="859.5">CHOOSE_TO_CONTINUE_OR_STOP</text></g><path d="M 280 780 L 280 760 L 280 770 L 280 750" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 641 L 690 615 L 1330 615 L 1330 641" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 641 L 690 785 L 1330 785 L 1330 641" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 641 L 1330 641" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1009.5" y="632.5">Player</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-646-632-44-0)" font-size="12px"><text x="695.5" y="658.5">- m_combination: uint8_t</text><text x="695.5" y="672.5">- m_finished: bool</text></g><path d="M 690 689 L 1330 689" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-698-632-92-0)" font-size="12px"><text x="695.5" y="710.5">+ setReturnValueForChooseCombination(combination: uint8_t): void</text><text x="695.5" y="724.5">+ setReturnValueForFinishedTurn(finished: bool): void</text><text x="695.5" y="752.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="695.5" y="766.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool</text></g><path d="M 1380 756 L 1380 730 L 2020 730 L 2020 756" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 756 L 1380 764 L 2020 764 L 2020 756" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 756 L 2020 756" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1699.5" y="747.5">Bot</text></g><path d="M 1380 760 L 2020 760" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 730 L 1700 590 L 1290 590 L 1290 486.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1290 481.12 L 1293.5 488.12 L 1290 486.37 L 1286.5 488.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1120 615 L 1120 560 L 1120 486.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1120 481.12 L 1123.5 488.12 L 1120 486.37 L 1116.5 488.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 690 830 L 1330 830 L 1330 856" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 690 910 L 1330 910 L 1330 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 1330 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1009.5" y="847.5">GreedyBot</text></g><path d="M 690 860 L 1330 860" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-869-632-46-0)" font-size="12px"><text x="695.5" y="881.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="695.5" y="895.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 1380 856 L 1380 830 L 2020 830 L 2020 856" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 856 L 1380 910 L 2020 910 L 2020 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 856 L 2020 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1699.5" y="847.5">RandomBot</text></g><path d="M 1380 860 L 2020 860" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1384-869-632-46-0)" font-size="12px"><text x="1385.5" y="881.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="1385.5" y="895.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2040 855 L 2040 829 L 2680 829 L 2680 855" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 855 L 2040 909 L 2680 909 L 2680 855" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 855 L 2680 855" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2359.5" y="846.5">SafeBot</text></g><path d="M 2040 859 L 2680 859" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-868-632-46-0)" font-size="12px"><text x="2045.5" y="880.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="2045.5" y="894.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2040 750 L 2020 750 L 2020 753.43" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2020 748.18 L 2023.5 755.18 L 2020 753.43 L 2016.5 755.18 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2040 710 L 2680 710 L 2680 736" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2040 790 L 2680 790 L 2680 736" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2680 736" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2359.5" y="727.5">SmartBot</text></g><path d="M 2040 740 L 2680 740" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-749-632-46-0)" font-size="12px"><text x="2045.5" y="761.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="2045.5" y="775.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2360 829 L 2360 810 L 1700 810 L 1700 770.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 765.12 L 1703.5 772.12 L 1700 770.37 L 1696.5 772.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 830 L 1700 770.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 765.12 L 1703.5 772.12 L 1700 770.37 L 1696.5 772.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 830 L 1010 810 L 1700 810 L 1700 770.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 765.12 L 1703.5 772.12 L 1700 770.37 L 1696.5 772.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3510 122 L 3510 96 L 3980 96 L 3980 122" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3510 122 L 3510 626 L 3980 626 L 3980 122" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3510 122 L 3980 122" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3744.5" y="113.5">Rect</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3514-127-462-114-0)" font-size="12px"><text x="3515.5" y="139.5">- m_anchorPosX: int</text><text x="3515.5" y="153.5">- m_anchorPosY: int</text><text x="3515.5" y="181.5">- m_sdlRect: SDL_Rect</text><text x="3515.5" y="209.5">- m_anchorModeX: AnchorMode</text><text x="3515.5" y="223.5">- m_anchorModeY: AnchorMode</text></g><path d="M 3510 240 L 3980 240" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3514-249-462-382-0)" font-size="12px"><text x="3515.5" y="261.5">+ Rect(posX: int, posY: int, width: int, height: int, </text><text x="3515.5" y="275.5">    anchorModeX: AnchorMode, anchorModeY: AnchorMode)</text><text x="3515.5" y="289.5">+ getPosX(): int</text><text x="3515.5" y="303.5">+ getPosY(): int</text><text x="3515.5" y="317.5">+ getWidth(): int</text><text x="3515.5" y="331.5">+ getHeight(): int</text><text x="3515.5" y="345.5">+ getLeft(): int</text><text x="3515.5" y="359.5">+ getTop(): int</text><text x="3515.5" y="373.5">+ getRight(): int</text><text x="3515.5" y="387.5">+ getBottom(): int</text><text x="3515.5" y="401.5">+ setPos(x: int, y: int): Rect&amp;</text><text x="3515.5" y="415.5">+ setPosX(x: int): Rect&amp;</text><text x="3515.5" y="429.5">+ setPosY(y: int): Rect&amp;</text><text x="3515.5" y="443.5">+ setDimentions(width: int, y: int): Rect&amp;</text><text x="3515.5" y="457.5">+ setWidth(width: int): Rect&amp;</text><text x="3515.5" y="471.5">+ setHeight(height: int): Rect&amp;</text><text x="3515.5" y="485.5">+ setWidthKeepAspect(width:int): Rect&amp;</text><text x="3515.5" y="499.5">+ setHeightKeepAspect(height: int): Rect&amp;</text><text x="3515.5" y="513.5">+ setWidthKeepAspect(width: int, aspect: float): Rect&amp;</text><text x="3515.5" y="527.5">+ setHeightKeepAspect(height, aspect: float): Rect&amp;</text><text x="3515.5" y="541.5">+ setAnchorModeX(anchorModeX: AnchorMode): Rect&amp;</text><text x="3515.5" y="555.5">+ setAnchorModeY(anchorModeY: AnchorMode): Rect&amp;</text><text x="3515.5" y="569.5">+ setAnchorModeX(anchorModeX: AnchorMode, anchorModeX: AnchorMode): Rect&amp;</text><text x="3515.5" y="583.5">+ containsPoint(x: int, y: int): bool</text><text x="3515.5" y="597.5">- updateX(): void</text><text x="3515.5" y="611.5">- updateY(): void</text></g><path d="M 4030 150 L 4030 124 L 4190 124 L 4190 150" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 4030 150 L 4030 234 L 4190 234 L 4190 150" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 4030 150 L 4190 150" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="4109.5" y="141.5">&lt;&lt;Enum&gt;&gt; AnchorMode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4034-155-152-84-0)" font-size="12px"><text x="4035.5" y="167.5">LEFT,</text><text x="4035.5" y="181.5">RIGHT,</text><text x="4035.5" y="195.5">TOP,</text><text x="4035.5" y="209.5">BOTTOM,</text><text x="4035.5" y="223.5">CENTER</text></g><path d="M 3980 179 L 4030 179" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 165px; margin-left: 3991px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">1</div></div></div></foreignObject><text x="4010" y="169" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><path d="M 2850 26 L 2850 0 L 3480 0 L 3480 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 26 L 2850 510 L 3480 510 L 3480 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 26 L 3480 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3164.5" y="17.5">Window</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-31-622-134-0)" font-size="12px"><text x="2855.5" y="43.5">- m_fullscreen: bool</text><text x="2855.5" y="57.5">- m_drawEvents: std::list&lt;DrawEvent*&gt;</text><text x="2855.5" y="71.5">- m_leftClickEvents: std::list&lt;LeftClickEvent*&gt; </text><text x="2855.5" y="85.5">- m_windowClosedEvents: std::list&lt;WindowClosedEvent*&gt;</text><text x="2855.5" y="99.5">- m_windowResizedEvents: std::list&lt;WindowResizedEvent*&gt; </text><text x="2855.5" y="113.5">- m_keyPressedEvents: std::list&lt;KeyPressedEvent*&gt;</text><text x="2855.5" y="127.5">- m_sdlWindow: std::shared_ptr&lt;SDL_Window&gt;</text><text x="2855.5" y="141.5">- m_sdlRenderer: std::shared_ptr&lt;SDL_Renderer&gt; </text></g><path d="M 2850 164 L 3480 164" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-173-622-342-0)" font-size="12px"><text x="2855.5" y="185.5">- Window(title: const std::string&amp;, width: int, height: int, fullscreen: bool)</text><text x="2855.5" y="199.5">+ create(title: const std::string&amp;, width:int, height: int, fullscreen: bool): static std::shared_ptr&lt;Window&gt;+ getFullscreen() const: bool</text><text x="2855.5" y="213.5">+ setFullscreen(fullscreen: bool): void</text><text x="2855.5" y="227.5">+ toggleFullscreen(): void;</text><text x="2855.5" y="241.5">+ setWindowIcon(path: const std::string&amp;) const: void</text><text x="2855.5" y="255.5">+ getWidth() const: int </text><text x="2855.5" y="269.5">+ getHeight() const: int</text><text x="2855.5" y="283.5">+ loadTexture(path: const std::string&amp;) const: std::shared_ptr&lt;const Texture&gt;</text><text x="2855.5" y="297.5">+ createTextureFromSurface(const std::shared_ptr&lt;SDL_Surface&gt;&amp; surface) const: std::shared_ptr&lt;const Texture&gt;</text><text x="2855.5" y="311.5">+ drawTexture(texture: const Texture&amp;, rect: const Rect&amp;) const: void </text><text x="2855.5" y="325.5">+ setDrawColor(rgba: uint32_t) const: void</text><text x="2855.5" y="339.5">+ setDrawColor(r: uint8_t, g: uint8_t, b: uint8_t, a: uint8_t) const: void</text><text x="2855.5" y="353.5">+ handleEvents(): void</text><text x="2855.5" y="367.5">+ subscribeDrawEvent(event: DrawEvent*): void</text><text x="2855.5" y="381.5">+ unsubscribeDrawEvent(event: DrawEvent*): void</text><text x="2855.5" y="395.5">+ subscribeLeftClickEvent(event: LeftClickEvent*): void</text><text x="2855.5" y="409.5">+ unsubscribeLeftClickEvent(event: LeftClickEvent*): void</text><text x="2855.5" y="423.5">+ subscribeWindowClosedEvent(event: WindowClosedEvent*): void</text><text x="2855.5" y="437.5">+ unsubscribeWindowClosedEvent(event: WindowClosedEvent*): void</text><text x="2855.5" y="451.5">+ subscribeWindowResizedEvent(event: WindowResizedEvent*): void</text><text x="2855.5" y="465.5">+ unsubscribeWindowResizedEvent(event: WindowResizedEvent*): void</text><text x="2855.5" y="479.5">+ subscribeKeyPressedEvent(event: KeyPressedEvent*): void</text><text x="2855.5" y="493.5">+ unsubscribeKeyPressedEvent(event: KeyPressedEvent*): void</text></g><path d="M 3165.06 540 L 3165.06 530 L 3165.06 510" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2840 566 L 2840 540 L 3300 540 L 3300 566" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2840 566 L 2840 740 L 3300 740 L 3300 566" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2840 566 L 3300 566" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3069.5" y="557.5">Texture</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2844-571-452-84-0)" font-size="12px"><text x="2845.5" y="583.5">- m_sdlTexture: std::shared_ptr&lt;const SDL_Texture&gt;</text><text x="2845.5" y="597.5">- m_window: const std::weak_ptr&lt;const Window&gt;</text><text x="2845.5" y="611.5">- m_width, m_height: int</text><text x="2845.5" y="625.5">- m_aspect: float</text></g><path d="M 2840 654 L 3300 654" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2844-663-452-82-0)" font-size="12px"><text x="2845.5" y="675.5">- Texture(texture: SDL_Texture*, windows: const std::weak_ptr&lt;const Window&gt;&amp;)</text><text x="2845.5" y="689.5">+ getWidth() const: int</text><text x="2845.5" y="703.5">+ getHeight const: int</text><text x="2845.5" y="717.5">+ getAspect(): float</text><text x="2845.5" y="731.5">draw(rect: const Rect&amp;): void</text></g><path d="M 3372 706 L 3372 680 L 3952 680 L 3952 706" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3372 706 L 3372 840 L 3952 840 L 3952 706" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3372 706 L 3952 706" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3661.5" y="697.5">Font</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3376-711-572-24-0)" font-size="12px"><text x="3377.5" y="723.5">- m_sdlFont: std::shared_ptr&lt;TTF_Font&gt;</text></g><path d="M 3372 734 L 3952 734" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3376-743-572-102-0)" font-size="12px"><text x="3377.5" y="755.5">+ create(path: const std::string&amp; path, ptSize: int): static std::shared_ptr&lt;const Font&gt;</text><text x="3377.5" y="769.5">+ path: const std::string</text><text x="3377.5" y="783.5">+ ptSize: const int</text><text x="3377.5" y="797.5">+ createDiffrentSize(ptSize: int) const: std::shared_ptr&lt;const Font&gt;</text><text x="3377.5" y="811.5">+ renderText(text: const std::string&amp;, window: const std::shared_ptr&lt;const Window&amp;&gt;, color: uint32_t) const</text><text x="3377.5" y="825.5">+ Font(path: const std::string&amp;, ptSize: int)</text></g><path d="M 3280 810 L 3320 810 L 3320 510" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2930 791 L 2930 765 L 3280 765 L 3280 791" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2930 791 L 2930 855 L 3280 855 L 3280 791" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2930 791 L 3280 791" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3104.5" y="782.5">Event</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2934-796-342-24-0)" font-size="12px"><text x="2935.5" y="808.5">- m_window: const std::shared_ptr&lt;Window&gt;</text></g><path d="M 2930 819 L 3280 819" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2934-828-342-32-0)" font-size="12px"><text x="2935.5" y="840.5">+ Event(window: const std::shared_ptr&lt;Window&gt;&amp;)</text></g><path d="M 3368 870 L 3368 850 L 3286.37 850" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3281.12 850 L 3288.12 846.5 L 3286.37 850 L 3288.12 853.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3198 896 L 3198 870 L 3538 870 L 3538 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3198 896 L 3198 970 L 3538 970 L 3538 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3198 896 L 3538 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3367.5" y="887.5">DrawEvent</text></g><path d="M 3198 900 L 3538 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3202-909-332-66-0)" font-size="12px"><text x="3203.5" y="921.5">+ DrawEvent(subscribeEvent: bool)</text><text x="3203.5" y="935.5">+ ~DrawEvent();</text><text x="3203.5" y="949.5">+ subscribe() final: void</text><text x="3203.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 3020 870 L 3020 861.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3020 856.12 L 3023.5 863.12 L 3020 861.37 L 3016.5 863.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 896 L 2850 870 L 3190 870 L 3190 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 896 L 2850 970 L 3190 970 L 3190 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 896 L 3190 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3019.5" y="887.5">LeftClickEvent</text></g><path d="M 2850 900 L 3190 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-909-332-66-0)" font-size="12px"><text x="2855.5" y="921.5">+ LeftClickEvent(subscribeEvent: bool)</text><text x="2855.5" y="935.5">+ ~LeftClickEvent();</text><text x="2855.5" y="949.5">+ subscribe() final: void</text><text x="2855.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 3720 870 L 3720 850 L 3286.37 850" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3281.12 850 L 3288.12 846.5 L 3286.37 850 L 3288.12 853.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3550 896 L 3550 870 L 3890 870 L 3890 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3550 896 L 3550 970 L 3890 970 L 3890 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3550 896 L 3890 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3719.5" y="887.5">WindowResizedEvent</text></g><path d="M 3550 900 L 3890 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3554-909-332-66-0)" font-size="12px"><text x="3555.5" y="921.5">+ WindowResizedEvent(subscribeEvent: bool)</text><text x="3555.5" y="935.5">+ ~WindowResizedEvent();</text><text x="3555.5" y="949.5">+ subscribe() final: void</text><text x="3555.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 4080 870 L 4080 850 L 3286.37 850" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3281.12 850 L 3288.12 846.5 L 3286.37 850 L 3288.12 853.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3910 896 L 3910 870 L 4250 870 L 4250 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3910 896 L 3910 970 L 4250 970 L 4250 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3910 896 L 4250 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="4079.5" y="887.5">WindowClosedEvent</text></g><path d="M 3910 900 L 4250 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3914-909-332-66-0)" font-size="12px"><text x="3915.5" y="921.5">+ WindowClosedEvent(subscribeEvent: bool)</text><text x="3915.5" y="935.5">+ ~WindowClosedEvent();</text><text x="3915.5" y="949.5">+ subscribe() final: void</text><text x="3915.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 2850 1030 L 2830 1030 L 2830 840 L 2923.63 840" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2928.88 840 L 2921.88 843.5 L 2923.63 840 L 2921.88 836.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 1006 L 2850 980 L 3190 980 L 3190 1006" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 1006 L 2850 1080 L 3190 1080 L 3190 1006" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 1006 L 3190 1006" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3019.5" y="997.5">KeyPressedEvent</text></g><path d="M 2850 1010 L 3190 1010" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-1019-332-66-0)" font-size="12px"><text x="2855.5" y="1031.5">+ KeyPressedEvent(subscribeEvent: bool)</text><text x="2855.5" y="1045.5">+ ~KeyPressedEvent();</text><text x="2855.5" y="1059.5">+ subscribe() final: void</text><text x="2855.5" y="1073.5">+ unsubscribe() final: void</text></g><path d="M 3300 650 L 3662 650 L 3662 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3480 360 L 3490 360 L 3510 360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1546.47 240 L 1546.47 255.06 L 2850 255.06" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>