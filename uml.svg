<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="4252px" height="1084px" viewBox="-0.5 -0.5 4252 1084" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-08-02T20:45:46.221Z&quot; agent=&quot;5.0 (Macintosh)&quot; etag=&quot;5FaMc_Tf4gWgNveBAbL_&quot; version=&quot;20.2.0&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;7V1rc5u60/80mXHPTDrm5svLxLme0zT9J+5Je95kiK0ktBhcwLn0xfPZHwkQBmkBYYMhjc6caWx5JYR2tfrtarXa0yaLl1PPXD5euHNk76n9+cuedrSnqpquDPEfUvIalSjaeBSVPHjWPC5bF1xbv1Fc2I9LV9Yc+RnCwHXtwFpmC2eu46BZkCkzPc99zpLdu3b2qUvzAXEF1zPT5ktvrHnwGJWO1OG6/AxZD4/0ycpgHP2yMClx/Cb+ozl3n1NF2vGeNvFcN4g+LV4myCajR8fl5vz1xv70c3D69//8X+bXw3+mn//djxo7qVIleQUPOcHGTZ+5l/qPm0f1xrbRy+Dbr+D0v/k+HR4/eKUDhuZ4/OKvrhc8ug+uY9rH69JDz105c0Sa7eNva5pPrrvEhQou/IGC4DUWBnMVuLjoMVjY8a/ImR8Q1uKvjuugqOTEsu24ScH3pX13V94s7vyPX7Pz39rs+u/b4Rd0dnwz/n7/a1/RY7kzvQcUFIyGHrOeDEFKeuLxPEXuAgXeKybwkG0G1lNWxMxYUh8SurgqflfzNUWwdC0n8FMtfyEFmOCFTh0tFrl40lERPNmwAv4Q9YF+S73MuiiUlyqyo71T2QEJB3WLTop51Xmjxd15Mu1V/CiOWQ+YF8tqw/WEvAC9ZLoe623zjjbbh9+b1tKGRkZU9X4sus9r7WwM4rLHlGZO9PA2g1XEutRYHbqmN+cGzH+2FrYZyty96wRU0IlUmrb14ODPMzyMyMMFZKQsvAodxD8ERLwPZ4+WPf9kvror8lJ+YM5+0m+Hj65n/cbNmlTS8c9eEM8DdZChuCY1Y4H3kI9pvlAOKkzRhfmSIfxk+kFcMHNt21z61l3yGgss5ZZz6AaBu8idT8UCx0oILwkx4zVBvivjpvg+BObIYSTSfrDu2QH+uML6Vhnc4lL8ntrLQTgwaVra4xzifQIobme4U35E4wdz8kE7WDnWrxW6XQYeJreJIJCuYwYHaM843DNwtwYPQcKIlDjicQ5CMfHcn2ji2q631on3WCEyRVREbXQf5AqovzRnlvPwKaQ50tclVzFDSJGL697boQp+tOZz5IR6Hfc4VgJEbOI1DneUvMQhZuGk/9EIX2eCvyvr7/h/Qu4FEzKUnmmFcoawmD4jPwAlsHAWCwugOhATwIHekPyNynW0bYW8i3hM8auyEYMXmFXhEhxzdBouuPsKx3WN57oGcNg275D9xfWtwHJJ+15Ey3C+LeaOBbXLqCHejnN0S7iy9D5wegSDC8zO1cLpzcI/a00yug0+JIomLI0IcRPmYhk2wLRlzp9MZ4auVnhl9vwL0/uJ//TMWUCk5SCltA5I0bGzWpBJSYoXd5ZjRvxM0x1ZM6xg1j/SJ3+IyJ5cPBRsJ/Bqg4KoC7QHReTmcmm/RuSX9/e4qj91w+7FlQ+c+eQRzX7eWE7hm8TPuMMmplSYdc+pkdicGqsNoVpV52YVb79mLYznRytA15gl5Ndnz1xmrQlRWagfBcW/qqMsHN5XeMWlA2Os1QCK4FeAUFEXLIcxY+MO+IEaQiPVnN2g8OJ4ai6QtBuq2A3DHPnIlQNN/TjK/MfDuGF/+FFRAFHQC0QhfuAVEUnnAb9a8kSdkTzdAJ4IPG2QfZhpYxbjFRQdEg3lc+JXzSUDS6TBSWRkeTxbTui7TK+ZiQniP2IuzdMmyE1Enlgefc6UIYKsCLdHSU5c4rYqblWtvdUFclZRoxfkE/vzA56zV4QlR575jGJgccoUQpUiIy0hj75yz8cTYI68HPBDCFwnGu6J7fooxIZ9Ahg8a44K6hDEMbGt2c/eS0SFYYCmEqNzEklqqkywyagbV+F0n/dS1m+m6bSlW9J+n1OFEoLBK8g2RmuetlOMpgxXRcC7KC3XTVmsjABkk8PjpsxXJc83RhRdZIAR7V+gnEOLbK2VE1uVqJCwvrpJfd5w9lZOoWEZoqHP6DlU5r3QOBBeYJJFAOgH/ET4o1SCdc8Q3hLNmyFGU8aorgBTpAuGkmIYjKUEuNqT/fnsitGUVamrwGBFk4z+xSK0mqVwXILnqLurO1aV3u+4VaXnCVOV3RhYRPqNiYgmQYUwf9Wq/NUF+VsDoIB7zPtKYsdviCViL2/G6837iEPYIETqpTzJ+ZRyXa5ZyPhlGRSy5tbkAcfUPy8kJX7H8mimeJTbjmYaGFkX90AviWYqqdBMNJMBKaguwLnhkPE+QjsE0DaMNmxsqYZ2N7NozrwjqgfEc7Fl1x04156TfPOdJqOy0QQgPFBsmkN4hoDFJBEeM8W28QyC/G0K4dFFnQ+nenT9dPhA7y6Mrss4YeKAu4yXaG7N0PTRY7ctjpJixhmThwXvLcfyH9F8uvIEnp0JIGB9SShIAg0iJ1gYPBFWYCMQQGfUQ6qBvUxMR6pY+pB2MV00XWy6DAZNzRfe3uXVYZvBDBWWGBrMYPQ/9vv6QNOV+B9+jPWPo+Gor9N/ANhSw/Iz9Z7/27ef5/8d+V9Ofhhfta/f/f3O+uuGShbhDfn9ZdUARLNwO3uroSr31qFIVYHYLlJj3cF3XXLXFUpm7d66OkKnwR5LX50wc7vsqgM7zBvCB5Pp5ZWSgiNhgSrxSYNCIOhKo06ebaTg9O73+aVu/p4Of/0TnC3+O/52dgsejhBaAj5jzl8HaClXgEZWABoFl4UMyc5dWl7UhlYEUF7kYQaI2YVTa6sVAWJuDSsC2GHe3Tc5u7y8Pr49Op8c304uLw7PPx9Mzy8/p1aEmGJ6iX//PD3//PX49vLq9np6+UWuFXWLB7BWQOJRx1oBai+DY+mb3nUpWsFLzwHTaJbdHwT+9vrpm/l8rl8dHLv6s/3vE9r/us8HBKf8Z91ZoLsUp17J2s9doPVxdoUGDqRpY8j9XkcMDigKfNBmFMpM/KxZjyj1pBqHenQAlTnGuvbl+vRE2vpwmHE4KKk0wVM/d1eeUFuOj4gaXbuMTYac+IfvmDNypRF5ctkJBDTFNhsOoETXcX4W7LHASaV3CDnrYa6ouqoBcoIdhswJYl0mq5foLtJs5ZGxOSg8Mwrs05AH9YhqPD8qOoubt+kUnudd66+U9ituj3YOOm4rlVmD8s5jaFDe6whdAnsMhVR0YXeCxTHC7snmgAx92ibBxNxR9u5g4C45qQpFtJPbFLCkyIgTYe4ms6qLGxVwj1WAu2GgMGzOsGv0XTmZXGVrFpkdbmvAXf7DIoQL+ZJ2VhXBpJYjhAfMeSUa7JAXIFxCv3V8MDymvLXJi1KsHzaIySkFF8naAgUBZQV0S4iYCwUHbJZJYAEAA5EbW95H72AyA+H+O3I8bzSZR2pWSJSSyVxCv/VkBrdYIAOiC8bWPruvqwNZbsCcS1od1hY4VjyETh2L7o711KUdhEKZE4+mTPQrzQ2lAbv8oJdCqyPnEfgWPOSO3PsOjfoIIfU6BoTdBeC8cVDgc0Rr+ZdPNB0LE44dN0YCy51JrmuNq+CZ9PD/BfJwVQdNny0/ANK7pJyL1KmYJUhSIOwVZhBgsxgAjahbNsKEyafD4+UuSOXN98qhmKK7IIpWwzYI2GUZi9kcdxVg/W1qHwTscd6x6WQNhnOJJmlGob0FdpsE2LpIqenwsAvTEnxaBajMVtxAy2VPzqSTf6Y3cOp6SEp9QkPHHz4CR4BfmNiByPNJRYseSw2eRsIPoussSw+sv1Gd7DLNbZbLtaFm7SG4q6TUsa0E95nPwfamTeSiiLm0iVzEwN2HZsG96eqBpMToTM7f8weSBo2lWoXHirc7vtjmK0Hu0gQVV2B1HDQCOa/UkWsA7jMPb7mAsmKrj57/zVlK5ZpXKDJqVZEBDCJQZPSm7CEgLbM0iGpj71BQIzRlEAEpjpPD+VcoWHnOv+SXE9fDKJxJPJCnMgrzR7LNnqTTCfC6RSAOdSdJESLyIo9XklGTyd1bTx6FzZ8v725oZN7ypgg4b+u4vAHuclcvFlAUZj95CDh9do13+fhXDPgk2K0CdiufoxIFu415cqk4SeQiwN5RVfaKAtOmkAvAzN26Yma26fvWLOONUer3xlDOvJnrVnUmw96gJGRB6bMOkl3ELLR+3equxEd9W+IzYgLkByWX9ZbQNyQ8Xc1uyfoaR+1jL5W3ME89hOavEoFVQ2CJ0NWOwEaN8V6eKRRnbx0nRneLwPJOFUpvTLE3RvrJ658MQAJK2E9eQwJKuMtdPXLIOWQ6AAo03jS/wrPJXUhQUBEU1HGKcLegQJOnCIXZm8yTNwMKNBXgrgQFEhS0MRlaBwWaQDRxO6BgxGRJHhnj1kEB71W5Nu+RhATVIEEic28IEkBRCBISFM+StwMJoPttJSSQkKCNydA6JKAP+9M3njThMPJY73QkjlzjfdbXeDEOJAzJhSH15EPgIOlQODiyMVwi03CLq+LKAUKt4xLIYytxicQlbUyG9nGJwjH1z8Qlemu4ZKOAGFVhkpiMhiXxVGwAFlOhmZAYnV8ZuyE+WGq812/kEXiKx1+/p387onAo+va6EcwpFzsgidguxa5cTIZsYqmoq3E1RrvUITFdjcDriMTQPfC3LzFVVd5w9CY0Hu+0vEIzaSRGVzHjB56YC8smHDlD9hMi79Wg9aipjNAoBnBd5hBAVEYdCfVgCcm7I8J0sInhYcvsW4SqQ2lmsxlRmu8QDUfuz+1Q+kLa66NPt5Es5leI2r9w5yjuxEFSUED7nad9p5ZABQkvVh9bXUkNCbRCj+zWL9AynrMNxitAZlCQ842lTcqL9CRKprfM6jHiWlhm1dZk3fdMGe17pjCttCbq3kGf/7dQd5E2ChQWmOCJqOLeB1jRrkm+l5CE0l5Ccxa+cgkREesSEjwXSiiuBB4UrdlFRH745r0Xhkmvyfe4brzc5GRx8uMhftmk2vde9acdWQs8C8mVSj1I8Ko3GPE225Zo3ZjnjLRXevI/CC0P/CWZbrQPlTuQaqPmrqyHNpqe4a9ROV6Rza37uXXD6+n/rVegPKo3971XqGpq7R2r2jbr/oyYApbjhzZU+bwGUoWulnMzQIm+ZHIzrCm+51DIfDHtgAg+ZQEIIrSR2hSMgDZcsjfNHMO3IBfYGwXm9XZ2MyBu78SUHvUZU3rEb04oUNpsRWnKlKZHGFKi8+n4ZBoqrUSbXJ2fnjFF4QW56YLDy+n08iJbNjn+PD2+krpoU11U+QwCYMmC8kTlrn5xamez68UKvqU+E6dy7GPG39ZeZfKFOpXXzui9lCs65ZnOcUbnMnXHySSpD6zUi13/+fPtJETlFA4vM924oGT3C8SQOWaeXDqUxhYQtGhseeDj7G8sZy5vZW5JQpI0DElaBiCUS4Oc8f3GRIQ/XRAntFzZtj/zEHIKLkeYe+bz8RMKl9xMUmzbIvE1EXg9okR/5V4vQMDBxLZmP0sb+5ShTLXY5xp9DkV9Yrs+mpe2e8MS53c2avcqFDnRhtPUhZ3+iV6/YGkW6fI/WdL8DvtzO572ZZnLyQ4J1RD5jV3hpRF59NaMkuYSYvClpdG7PdA0Kp9sgUIMIbXT3HUShjza0gbjoZsmQM43tWVCd5+Z5SbSOb3ACsgQpyM019ol8DBTmFhN4d0TaDXjtzwwgRmgzbuxSR9iHYqx+6xYmebq5WTb4iR5AHy1Q+xXTZEVdAnMUxu4Dw82yjxnTZznHCfdPsed6S1NyqyyYWW6D/YltbOUIY5iYAo3mXh6hth2zfkULz8rD23e6wJe0pbiZ+QyNRLImOrEcxfXK+8e2zw9vivg4huTp9qnYtv3o5/q7zPBhHTsgpg2M3zrBjJh18kWBqXLOOxBieC5TPa48PPD1aHnPdyZ6/hwTSU5mMvlKtsEE19OevoAlN0BZWamTOTRj6aDl6kI+OXuEkTMu8MT0LpDCbbuoadwsSBV1oC7qI2VU0crSRtZYJ5uiIHsgn2qpb2kNQ7epxvksb9gH2tslWkzbS/wjWasiUp9randpFXGBkk3yZongv2soUVpUrSBLIHU3xCy1GgqlNqx5VhvxXu9W8exIXp+lLKw7XMaY5rFIBYUY1wctVxWoZmoZYMP4UtginSVtuIqVVhXKeBMh3bH1OZ8pXy8X+ITm6aRrgCKJug8H0mnHY05tsczMn9CDZe476LRC/Hp4pYzU9kAZzawSK6tNaytdZwIBiW/uX1hgSSO0ltXO98VaP8QZHxDfKfPYhQeaN2nFNpf1CtGNJG/rf5K7P8q/p88548QaRxl+QFWfMS/0Sv1VsCWiVSZO5s6QFgfOHWaskYGfKTEievIc3AtxWYo9CQ2PaQJHB4xRtAe2KApODnIu3QSw8lQVMqw5HR6chvJFFWWUr9spF+SuboNJAOlR20Kkg0E7tqQkKx2vhuCWqMxRJZ3MWW8dSm+WRWODzUFl/GSkD3kILIrSR+T1UMMphLpFVMj1SFaB0Jr0WsfWff3hNWkTo97l6obXIWv4oXhLATo9iLtWmWXuMCcz+9OAoiTkytxzyZhO+Eshve42L6TF6skIaBoSDzbht7h4SyMVvqNedcHHLv/PO/6QDQsuyPeda3P3PO1kxQfdJRSi1C4ISdtm3Zc5UPmYNKI5shJaQvNALTFuDHTht9OEXBpl8c8yfVms/VmICxT+fYNKEHN2Tcyx2gbfAfsG5Dvjdk3eclHo2CQLdXH2pcsFcmuBIoHrqBANRYVMhq3jFt3lMCTnlkvha6Uh21DV4WmkY4lZazsALoO+R2tJM5Rwtd24Ot4wAgCcPGKBp2bVBqL9BjymzcSfVRdLJK5thXq3GXq8yF0LxVBH+sA6SRO9XgdlwofJvm/daUPkCcxaSncwL63HKIIRCJkS+kluNmRvALZyUF5pUtu/eBm9E7AjWh28o6AG3U0zAax0jUtN+q1pEJDaIjfRMwerpCQqBt5AroAieSJ3RqWGF1YFLoCifJuqWPOZ1XARUxNCY7eBDiqLLmtgyO6u/HHgyPRI0EdAUeazmxa7sbzw29J8YceJd5pJzpT6yDekRtQNawadZx12S3eyduAAs5PV8A8QG2Je94E7qnjyrod4553cmXdSHljuGdktIB76ChxuCeVmULCnnZgz2DUOdhDz0NJ2LPFojESF4WOwJ5R3s4Xn+KmMupJV5ag5y2Anury2zroGQ3fCeh5azthA/bWhH5ZAhi2xri/C5jEb4Ux6aYkSOrGXpjSB47u7holyc2wGlaZN7cZNsrbDGOT1lXASGxViZDeBEJ6g9thbV8svpP0eCNReKR2Ah5pOg18p3kpduETGhvvQRSEr9gxuiEKKnN9jK4WA+WyCg3JTtuGVs2y8+PX7Py3Nrv++3b4BZ0d34y/3//aV0StrI6cA1b7jM00LLGxium3lpyLyfTr6tPl+Ml8sVbDM8P43w3abzsco0BwGPaJS1JaQAokaVt54BmoMukxuTsGIxmPq61ZW1my1L6xc0nhYfYFclac+LxLAzwHd4qKbL6d3WckSofM7DGAWJPgjW0gKygHeafIl7b5ijzlGtloFpmwmeT7TBbTiFoVpH4wFyiiOCWfgAuDI7pQM5XmlCFtXIWUeQlZ77DkPKQai3MoksMjoekD3BGVup+Eowbe/XCFxccRo3/yxdvFHJgmKXDEKqjiFciFzJazQlV6b84C1/uMh5xJOjnDfPkLW4h6aCtK61dIh+Rr5kr+GUhjKDSatHaNIYO2GuQukIEbZG8N7jewe3mhWeb8x8oPV+YvkVrqCdwLVXQdBdugum2DrpMJANu+uSSGnl5VT7N/Ze6rX6cEy2+LIKtt8yqEt+Jk1k3e0RmmzS3qCIZDKMilkJq65rkM5GUAVbWiNjSblT/RHkx7FoogreD27c79CAaz2WbEDo5cRwJboe4EZLDo8Ku6FJ21P7MNyVHG42qSw1XY0nuJv3quG6TJPXP5eOHOEaH4fw==&lt;/diagram&gt;&lt;/mxfile&gt;"><defs><clipPath id="mx-clip-1609-401-552-64-0"><rect x="1609" y="401" width="552" height="64"/></clipPath><clipPath id="mx-clip-1609-473-552-92-0"><rect x="1609" y="473" width="552" height="92"/></clipPath><clipPath id="mx-clip-1197-31-699-154-0"><rect x="1197" y="31" width="699" height="154"/></clipPath><clipPath id="mx-clip-1197-193-699-52-0"><rect x="1197" y="193" width="699" height="52"/></clipPath><clipPath id="mx-clip-1784-653-202-52-0"><rect x="1784" y="653" width="202" height="52"/></clipPath><clipPath id="mx-clip-1004-419-452-66-0"><rect x="1004" y="419" width="452" height="66"/></clipPath><clipPath id="mx-clip-1944-98-202-42-0"><rect x="1944" y="98" width="202" height="42"/></clipPath><clipPath id="mx-clip-1974-218-212-42-0"><rect x="1974" y="218" width="212" height="42"/></clipPath><clipPath id="mx-clip-724-61-382-64-0"><rect x="724" y="61" width="382" height="64"/></clipPath><clipPath id="mx-clip-724-133-382-52-0"><rect x="724" y="133" width="382" height="52"/></clipPath><clipPath id="mx-clip-724-263-202-42-0"><rect x="724" y="263" width="202" height="42"/></clipPath><clipPath id="mx-clip-2244-81-382-134-0"><rect x="2244" y="81" width="382" height="134"/></clipPath><clipPath id="mx-clip-2244-223-382-152-0"><rect x="2244" y="223" width="382" height="152"/></clipPath><clipPath id="mx-clip-694-646-632-44-0"><rect x="694" y="646" width="632" height="44"/></clipPath><clipPath id="mx-clip-694-698-632-92-0"><rect x="694" y="698" width="632" height="92"/></clipPath><clipPath id="mx-clip-694-869-632-46-0"><rect x="694" y="869" width="632" height="46"/></clipPath><clipPath id="mx-clip-1384-869-632-46-0"><rect x="1384" y="869" width="632" height="46"/></clipPath><clipPath id="mx-clip-2044-868-632-46-0"><rect x="2044" y="868" width="632" height="46"/></clipPath><clipPath id="mx-clip-2044-749-632-46-0"><rect x="2044" y="749" width="632" height="46"/></clipPath><clipPath id="mx-clip-3514-127-462-114-0"><rect x="3514" y="127" width="462" height="114"/></clipPath><clipPath id="mx-clip-3514-249-462-382-0"><rect x="3514" y="249" width="462" height="382"/></clipPath><clipPath id="mx-clip-4034-155-152-84-0"><rect x="4034" y="155" width="152" height="84"/></clipPath><clipPath id="mx-clip-2854-31-622-134-0"><rect x="2854" y="31" width="622" height="134"/></clipPath><clipPath id="mx-clip-2854-173-622-332-0"><rect x="2854" y="173" width="622" height="332"/></clipPath><clipPath id="mx-clip-2844-571-452-84-0"><rect x="2844" y="571" width="452" height="84"/></clipPath><clipPath id="mx-clip-2844-663-452-82-0"><rect x="2844" y="663" width="452" height="82"/></clipPath><clipPath id="mx-clip-3376-711-572-24-0"><rect x="3376" y="711" width="572" height="24"/></clipPath><clipPath id="mx-clip-3376-743-572-102-0"><rect x="3376" y="743" width="572" height="102"/></clipPath><clipPath id="mx-clip-2934-796-342-24-0"><rect x="2934" y="796" width="342" height="24"/></clipPath><clipPath id="mx-clip-2934-828-342-32-0"><rect x="2934" y="828" width="342" height="32"/></clipPath><clipPath id="mx-clip-3202-909-332-66-0"><rect x="3202" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-2854-909-332-66-0"><rect x="2854" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-3554-909-332-66-0"><rect x="3554" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-3914-909-332-66-0"><rect x="3914" y="909" width="332" height="66"/></clipPath><clipPath id="mx-clip-2854-1019-332-66-0"><rect x="2854" y="1019" width="332" height="66"/></clipPath><clipPath id="mx-clip-2244-411-382-174-0"><rect x="2244" y="411" width="382" height="174"/></clipPath><clipPath id="mx-clip-2244-593-382-112-0"><rect x="2244" y="593" width="382" height="112"/></clipPath></defs><g><path d="M 1460 240 L 1460 380" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1546.5 240 L 1546.5 305 L 1885 305 L 1885 370" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1605 396 L 1605 370 L 2165 370 L 2165 396" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1605 396 L 1605 560 L 2165 560 L 2165 396" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1605 396 L 2165 396" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1884.5" y="387.5">Board</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1609-401-552-64-0)" font-size="12px"><text x="1610.5" y="413.5">+ const width: uint16_t</text><text x="1610.5" y="427.5">+ const height: uint16_t</text><text x="1610.5" y="441.5">- m_cells: std::unique_ptr&lt;CellState[]&gt;</text></g><path d="M 1605 464 L 2165 464" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1609-473-552-92-0)" font-size="12px"><text x="1610.5" y="485.5">+ Board()</text><text x="1610.5" y="499.5">+ getColumn(column: uint8_t) const: Column&amp;</text><text x="1610.5" y="513.5">+ advanceRunnersMarkers(actor: const ActorEnum, combination: const DiceCombination&amp;): void</text><text x="1610.5" y="527.5">+ resetRunnerMarkers(): void</text><text x="1610.5" y="541.5">+ applyRunnerOffsetsToActorMarkersAndCheckWin(actor: const ActorEnum): bool</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 345px; margin-left: 1891px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">1</div></div></div></foreignObject><text x="1910" y="349" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><path d="M 1192.89 26 L 1192.89 0 L 1900 0 L 1900 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1192.89 26 L 1192.89 240 L 1900 240 L 1900 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1192.89 26 L 1900 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1545.94" y="17.5">Game</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1197-31-699-154-0)" font-size="12px"><text x="1198.39" y="43.5">- m_window: const std::shared_ptr&lt;Window&gt; </text><text x="1198.39" y="57.5">- m_font1: const std::shared_ptr&lt;const Font&gt; </text><text x="1198.39" y="71.5">- m_font2: const std::shared_ptr&lt;const Font&gt; </text><text x="1198.39" y="85.5">- m_menu: Menu</text><text x="1198.39" y="99.5">- m_gameRoundDrawer: GameRoundDrawer</text><text x="1198.39" y="113.5">- m_gameState: GameState </text><text x="1198.39" y="127.5">- render(): void</text><text x="1198.39" y="141.5">- onWindowClosed() override: void</text><text x="1198.39" y="155.5">- onLeftClick(x: int32_t, y: int32_t) override: void</text><text x="1198.39" y="169.5">- onWindowResized(width: int32_t, height: int32_t) override: void </text></g><path d="M 1192.89 184 L 1900 184" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1197-193-699-52-0)" font-size="12px"><text x="1198.39" y="205.5">+ Game(actor1:std::shared_ptr&lt;Actor&gt;&amp;, actor2:std::shared_ptr&lt;Actor&gt;&amp;)</text><text x="1198.39" y="219.5">+ run(): void</text><text x="1198.39" y="233.5">+ startNewRound(round: const std::shared_ptr&lt;GameRound&gt;&amp;): void</text></g><path d="M 1780 640 L 1780 600 L 1990 600 L 1990 640" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1780 640 L 1780 700 L 1990 700 L 1990 640" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1780 640 L 1990 640" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1884.5" y="617.5">&lt;&lt;struct&gt;&gt; Column</text></g><path d="M 1780 644 L 1990 644" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1784-653-202-52-0)" font-size="12px"><text x="1785.5" y="665.5">+ actor1Markers: uint8_t</text><text x="1785.5" y="679.5">+ actor2Markers: uint8_t</text><text x="1785.5" y="693.5">+ runnerOffset: uint8_t</text></g><path d="M 1885 560 L 1885 580 L 1885 600" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 406 L 1000 380 L 1460 380 L 1460 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 406 L 1000 480 L 1460 480 L 1460 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1000 406 L 1460 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1229.5" y="397.5">&lt;&lt;abstract&gt;&gt; Actor</text></g><path d="M 1000 410 L 1460 410" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1004-419-452-66-0)" font-size="12px"><text x="1005.5" y="431.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;): uint8_t</text><text x="1005.5" y="445.5">+ finishedTurn(board: const Board&amp;): bool</text><text x="1005.5" y="459.5">+ setActorEnum(actorEnum: ActorEnum): void</text><text x="1005.5" y="473.5">+ getActorEnum const: ActorEnum</text></g><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 43px; height: 1px; padding-top: 365px; margin-left: 1251px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">2</div></div></div></foreignObject><text x="1272" y="369" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">2</text></switch></g><path d="M 1940 85 L 1940 45 L 2150 45 L 2150 85" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1940 85 L 1940 135 L 2150 135 L 2150 85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1940 85 L 2150 85" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2044.5" y="62.5">&lt;&lt;enum&gt;&gt; ActorEnum</text></g><path d="M 1940 89 L 2150 89" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1944-98-202-42-0)" font-size="12px"><text x="1945.5" y="110.5">ACTOR1</text><text x="1945.5" y="124.5">ACTOR2</text></g><path d="M 1970 205 L 1970 165 L 2190 165 L 2190 205" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1970 205 L 1970 255 L 2190 255 L 2190 205" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1970 205 L 2190 205" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2079.5" y="182.5">&lt;&lt;enum&gt;&gt; NextStep</text></g><path d="M 1970 209 L 2190 209" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1974-218-212-42-0)" font-size="12px"><text x="1975.5" y="230.5">CHOOSE_DICE_COMBINATION</text><text x="1975.5" y="244.5">CHOOSE_TO_CONTINUE_OR_STOP</text></g><path d="M 1940 90 L 1920 90 L 1920 120 L 1900 120" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 720 30 L 1110 30 L 1110 56" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 720 180 L 1110 180 L 1110 56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 56 L 1110 56" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="914.5" y="47.5">DiceThrow</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-61-382-64-0)" font-size="12px"><text x="725.5" y="73.5">- m_dice: const uint8_t[4]</text><text x="725.5" y="87.5">- m_combinations: Combination[6]</text><text x="725.5" y="101.5">- m_combinationCount: uint8_t</text><text x="725.5" y="115.5">- insertCombination(a: uint8_t, b: uint8_t): void</text></g><path d="M 720 124 L 1110 124" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-133-382-52-0)" font-size="12px"><text x="725.5" y="145.5">+ DiceThrow(board: const Board&amp;, currentActor: const ActorEnum)</text><text x="725.5" y="159.5">+ getDice(diceID: uint8_t) const: uint8_t</text><text x="725.5" y="173.5">+ getCombination(combinationID: uint8_t) const: const Combination&amp;</text></g><path d="M 720 250 L 720 210 L 930 210 L 930 250" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 250 L 720 300 L 930 300 L 930 250" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 720 250 L 930 250" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="824.5" y="227.5">&lt;&lt;struct&gt;&gt; DiceCombination</text></g><path d="M 720 254 L 930 254" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-724-263-202-42-0)" font-size="12px"><text x="725.5" y="275.5">+ a: const uint8_t</text><text x="725.5" y="289.5">+ b: const uint8_t</text></g><path d="M 880 210 L 880 190 L 880 180" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 58px; height: 1px; padding-top: 195px; margin-left: 861px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">6</div></div></div></foreignObject><text x="890" y="199" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">6</text></switch></g><path d="M 1110 88 L 1192.89 88" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240 76 L 2240 50 L 2630 50 L 2630 76" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240 76 L 2240 370 L 2630 370 L 2630 76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240 76 L 2630 76" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2434.5" y="67.5">GameRound</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2244-81-382-134-0)" font-size="12px"><text x="2245.5" y="93.5">- m_nextStep: NextStep</text><text x="2245.5" y="107.5">- m_currentActor: ActorEnum</text><text x="2245.5" y="121.5">- m_isOver: bool</text><text x="2245.5" y="135.5">- m_chosenCombinationID: uint8_t</text><text x="2245.5" y="149.5">- m_rand: MersenneTwister</text><text x="2245.5" y="163.5">- m_board: Board</text><text x="2245.5" y="177.5">- m_actor1: std::shared_ptr&lt;Actor&gt;</text><text x="2245.5" y="191.5">- m_actor2: std::shared_ptr&lt;Actor&gt;</text><text x="2245.5" y="205.5">- m_diceThrow: DiceThrow</text></g><path d="M 2240 214 L 2630 214" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2244-223-382-152-0)" font-size="12px"><text x="2245.5" y="235.5">+ GameRound()</text><text x="2245.5" y="249.5">+ getBoard() const: const Board&amp;</text><text x="2245.5" y="263.5">+ getCurrentActorEnum() const: ActorEnum</text><text x="2245.5" y="277.5">+ getCurrentActor() const: std::shared_ptr&lt;Actor&gt;</text><text x="2245.5" y="291.5">+ getActor(actor: ActorEnum) const: std::shared_ptr&lt;Actor&gt;</text><text x="2245.5" y="305.5">+ getDiceThrow const: const DiceThrow&amp;</text><text x="2245.5" y="319.5">+ getChosenCombinationID() const: uint8_t</text><text x="2245.5" y="333.5">+ isOver() const: bool</text><text x="2245.5" y="347.5">+ getNextStep() const: NextStep</text><text x="2245.5" y="361.5">+ nextStep: void</text></g><path d="M 2190 210 L 2240 210" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 641 L 690 615 L 1330 615 L 1330 641" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 641 L 690 785 L 1330 785 L 1330 641" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 641 L 1330 641" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1009.5" y="632.5">Player</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-646-632-44-0)" font-size="12px"><text x="695.5" y="658.5">- m_combination: uint8_t</text><text x="695.5" y="672.5">- m_finished: bool</text></g><path d="M 690 689 L 1330 689" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-698-632-92-0)" font-size="12px"><text x="695.5" y="710.5">+ setReturnValueForChooseCombination(combination: uint8_t): void</text><text x="695.5" y="724.5">+ setReturnValueForFinishedTurn(finished: bool): void</text><text x="695.5" y="752.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="695.5" y="766.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool</text></g><path d="M 1380 756 L 1380 730 L 2020 730 L 2020 756" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 756 L 1380 764 L 2020 764 L 2020 756" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 756 L 2020 756" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1699.5" y="747.5">Bot</text></g><path d="M 1380 760 L 2020 760" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 730 L 1700 590 L 1290 590 L 1290 486.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1290 481.12 L 1293.5 488.12 L 1290 486.37 L 1286.5 488.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1120 615 L 1120 560 L 1120 486.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1120 481.12 L 1123.5 488.12 L 1120 486.37 L 1116.5 488.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 690 830 L 1330 830 L 1330 856" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 690 910 L 1330 910 L 1330 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 856 L 1330 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1009.5" y="847.5">GreedyBot</text></g><path d="M 690 860 L 1330 860" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-694-869-632-46-0)" font-size="12px"><text x="695.5" y="881.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="695.5" y="895.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 1380 856 L 1380 830 L 2020 830 L 2020 856" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 856 L 1380 910 L 2020 910 L 2020 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1380 856 L 2020 856" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="1699.5" y="847.5">RandomBot</text></g><path d="M 1380 860 L 2020 860" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-1384-869-632-46-0)" font-size="12px"><text x="1385.5" y="881.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="1385.5" y="895.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2040 855 L 2040 829 L 2680 829 L 2680 855" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 855 L 2040 909 L 2680 909 L 2680 855" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 855 L 2680 855" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2359.5" y="846.5">SafeBot</text></g><path d="M 2040 859 L 2680 859" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-868-632-46-0)" font-size="12px"><text x="2045.5" y="880.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="2045.5" y="894.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2040 750 L 2020 750 L 2020 753.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2020 748.12 L 2023.5 755.12 L 2020 753.37 L 2016.5 755.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2040 710 L 2680 710 L 2680 736" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2040 790 L 2680 790 L 2680 736" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2040 736 L 2680 736" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2359.5" y="727.5">SmartBot</text></g><path d="M 2040 740 L 2680 740" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2044-749-632-46-0)" font-size="12px"><text x="2045.5" y="761.5">+ choseCombination(board: const Board&amp;, diceThrow: const DiceThrow&amp;, rand: MersenneTwister&amp;) override: uint8_t</text><text x="2045.5" y="775.5">+ finishedTurn(board: const Board&amp;, rand: MersenneTwister&amp;) override: bool;</text></g><path d="M 2360 829 L 2360 810 L 1700 810 L 1700 770.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 765.12 L 1703.5 772.12 L 1700 770.37 L 1696.5 772.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 830 L 1700 770.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 765.12 L 1703.5 772.12 L 1700 770.37 L 1696.5 772.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1010 830 L 1010 810 L 1700 810 L 1700 770.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1700 765.12 L 1703.5 772.12 L 1700 770.37 L 1696.5 772.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3510 122 L 3510 96 L 3980 96 L 3980 122" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3510 122 L 3510 626 L 3980 626 L 3980 122" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3510 122 L 3980 122" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3744.5" y="113.5">Rect</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3514-127-462-114-0)" font-size="12px"><text x="3515.5" y="139.5">- m_anchorPosX: int</text><text x="3515.5" y="153.5">- m_anchorPosY: int</text><text x="3515.5" y="181.5">- m_sdlRect: SDL_Rect</text><text x="3515.5" y="209.5">- m_anchorModeX: AnchorMode</text><text x="3515.5" y="223.5">- m_anchorModeY: AnchorMode</text></g><path d="M 3510 240 L 3980 240" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3514-249-462-382-0)" font-size="12px"><text x="3515.5" y="261.5">+ Rect(posX: int, posY: int, width: int, height: int, </text><text x="3515.5" y="275.5">    anchorModeX: AnchorMode, anchorModeY: AnchorMode)</text><text x="3515.5" y="289.5">+ getPosX(): int</text><text x="3515.5" y="303.5">+ getPosY(): int</text><text x="3515.5" y="317.5">+ getWidth(): int</text><text x="3515.5" y="331.5">+ getHeight(): int</text><text x="3515.5" y="345.5">+ getLeft(): int</text><text x="3515.5" y="359.5">+ getTop(): int</text><text x="3515.5" y="373.5">+ getRight(): int</text><text x="3515.5" y="387.5">+ getBottom(): int</text><text x="3515.5" y="401.5">+ setPos(x: int, y: int): Rect&amp;</text><text x="3515.5" y="415.5">+ setPosX(x: int): Rect&amp;</text><text x="3515.5" y="429.5">+ setPosY(y: int): Rect&amp;</text><text x="3515.5" y="443.5">+ setDimentions(width: int, y: int): Rect&amp;</text><text x="3515.5" y="457.5">+ setWidth(width: int): Rect&amp;</text><text x="3515.5" y="471.5">+ setHeight(height: int): Rect&amp;</text><text x="3515.5" y="485.5">+ setWidthKeepAspect(width:int): Rect&amp;</text><text x="3515.5" y="499.5">+ setHeightKeepAspect(height: int): Rect&amp;</text><text x="3515.5" y="513.5">+ setWidthKeepAspect(width: int, aspect: float): Rect&amp;</text><text x="3515.5" y="527.5">+ setHeightKeepAspect(height, aspect: float): Rect&amp;</text><text x="3515.5" y="541.5">+ setAnchorModeX(anchorModeX: AnchorMode): Rect&amp;</text><text x="3515.5" y="555.5">+ setAnchorModeY(anchorModeY: AnchorMode): Rect&amp;</text><text x="3515.5" y="569.5">+ setAnchorModeX(anchorModeX: AnchorMode, anchorModeX: AnchorMode): Rect&amp;</text><text x="3515.5" y="583.5">+ containsPoint(x: int, y: int): bool</text><text x="3515.5" y="597.5">- updateX(): void</text><text x="3515.5" y="611.5">- updateY(): void</text></g><path d="M 4030 150 L 4030 124 L 4190 124 L 4190 150" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 4030 150 L 4030 234 L 4190 234 L 4190 150" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 4030 150 L 4190 150" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="4109.5" y="141.5">&lt;&lt;Enum&gt;&gt; AnchorMode</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-4034-155-152-84-0)" font-size="12px"><text x="4035.5" y="167.5">LEFT,</text><text x="4035.5" y="181.5">RIGHT,</text><text x="4035.5" y="195.5">TOP,</text><text x="4035.5" y="209.5">BOTTOM,</text><text x="4035.5" y="223.5">CENTER</text></g><path d="M 3980 179 L 4030 179" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 165px; margin-left: 3991px;"><div style="box-sizing: border-box; font-size: 0px; text-align: center;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: none; white-space: normal; overflow-wrap: normal;">1</div></div></div></foreignObject><text x="4010" y="169" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">1</text></switch></g><path d="M 2850 26 L 2850 0 L 3480 0 L 3480 26" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 26 L 2850 500 L 3480 500 L 3480 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 26 L 3480 26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3164.5" y="17.5">Window</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-31-622-134-0)" font-size="12px"><text x="2855.5" y="43.5">- m_fullscreen: bool</text><text x="2855.5" y="57.5">- m_drawEvents: std::list&lt;DrawEvent*&gt;</text><text x="2855.5" y="71.5">- m_leftClickEvents: std::list&lt;LeftClickEvent*&gt; </text><text x="2855.5" y="85.5">- m_windowClosedEvents: std::list&lt;WindowClosedEvent*&gt;</text><text x="2855.5" y="99.5">- m_windowResizedEvents: std::list&lt;WindowResizedEvent*&gt; </text><text x="2855.5" y="113.5">- m_keyPressedEvents: std::list&lt;KeyPressedEvent*&gt;</text><text x="2855.5" y="127.5">- m_sdlWindow: std::shared_ptr&lt;SDL_Window&gt;</text><text x="2855.5" y="141.5">- m_sdlRenderer: std::shared_ptr&lt;SDL_Renderer&gt; </text></g><path d="M 2850 164 L 3480 164" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-173-622-332-0)" font-size="12px"><text x="2855.5" y="185.5">- Window(title: const std::string&amp;, width: int, height: int, fullscreen: bool)</text><text x="2855.5" y="199.5">+ create(title: const std::string&amp;, width:int, height: int, fullscreen: bool): static std::shared_ptr&lt;Window&gt;</text><text x="2855.5" y="213.5">+ getFullscreen() const: bool+ setFullscreen(fullscreen: bool): void</text><text x="2855.5" y="227.5">+ toggleFullscreen(): void;</text><text x="2855.5" y="241.5">+ setWindowIcon(path: const std::string&amp;) const: void</text><text x="2855.5" y="255.5">+ getWidth() const: int </text><text x="2855.5" y="269.5">+ getHeight() const: int</text><text x="2855.5" y="283.5">+ loadTexture(path: const std::string&amp;) const: std::shared_ptr&lt;const Texture&gt;</text><text x="2855.5" y="297.5">+ createTextureFromSurface(const std::shared_ptr&lt;SDL_Surface&gt;&amp; surface) const: std::shared_ptr&lt;const Texture&gt;</text><text x="2855.5" y="311.5">+ drawTexture(texture: const Texture&amp;, rect: const Rect&amp;) const: void </text><text x="2855.5" y="325.5">+ setDrawColor(rgba: uint32_t) const: void</text><text x="2855.5" y="339.5">+ setDrawColor(r: uint8_t, g: uint8_t, b: uint8_t, a: uint8_t) const: void</text><text x="2855.5" y="353.5">+ handleEvents(): void</text><text x="2855.5" y="367.5">+ subscribeDrawEvent(event: DrawEvent*): void</text><text x="2855.5" y="381.5">+ unsubscribeDrawEvent(event: DrawEvent*): void</text><text x="2855.5" y="395.5">+ subscribeLeftClickEvent(event: LeftClickEvent*): void</text><text x="2855.5" y="409.5">+ unsubscribeLeftClickEvent(event: LeftClickEvent*): void</text><text x="2855.5" y="423.5">+ subscribeWindowClosedEvent(event: WindowClosedEvent*): void</text><text x="2855.5" y="437.5">+ unsubscribeWindowClosedEvent(event: WindowClosedEvent*): void</text><text x="2855.5" y="451.5">+ subscribeWindowResizedEvent(event: WindowResizedEvent*): void</text><text x="2855.5" y="465.5">+ unsubscribeWindowResizedEvent(event: WindowResizedEvent*): void</text><text x="2855.5" y="479.5">+ subscribeKeyPressedEvent(event: KeyPressedEvent*): void</text><text x="2855.5" y="493.5">+ unsubscribeKeyPressedEvent(event: KeyPressedEvent*): void</text></g><path d="M 3165 540 L 3165 530 L 3165 500" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2840 566 L 2840 540 L 3300 540 L 3300 566" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2840 566 L 2840 740 L 3300 740 L 3300 566" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2840 566 L 3300 566" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3069.5" y="557.5">Texture</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2844-571-452-84-0)" font-size="12px"><text x="2845.5" y="583.5">- m_sdlTexture: std::shared_ptr&lt;const SDL_Texture&gt;</text><text x="2845.5" y="597.5">- m_window: const std::weak_ptr&lt;const Window&gt;</text><text x="2845.5" y="611.5">- m_width, m_height: int</text><text x="2845.5" y="625.5">- m_aspect: float</text></g><path d="M 2840 654 L 3300 654" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2844-663-452-82-0)" font-size="12px"><text x="2845.5" y="675.5">- Texture(texture: SDL_Texture*, windows: const std::weak_ptr&lt;const Window&gt;&amp;)</text><text x="2845.5" y="689.5">+ getWidth() const: int</text><text x="2845.5" y="703.5">+ getHeight const: int</text><text x="2845.5" y="717.5">+ getAspect(): float</text><text x="2845.5" y="731.5">draw(rect: const Rect&amp;): void</text></g><path d="M 3372 706 L 3372 680 L 3952 680 L 3952 706" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3372 706 L 3372 840 L 3952 840 L 3952 706" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3372 706 L 3952 706" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3661.5" y="697.5">Font</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3376-711-572-24-0)" font-size="12px"><text x="3377.5" y="723.5">- m_sdlFont: std::shared_ptr&lt;TTF_Font&gt;</text></g><path d="M 3372 734 L 3952 734" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3376-743-572-102-0)" font-size="12px"><text x="3377.5" y="755.5">+ create(path: const std::string&amp; path, ptSize: int): static std::shared_ptr&lt;const Font&gt;</text><text x="3377.5" y="769.5">+ path: const std::string</text><text x="3377.5" y="783.5">+ ptSize: const int</text><text x="3377.5" y="797.5">+ createDiffrentSize(ptSize: int) const: std::shared_ptr&lt;const Font&gt;</text><text x="3377.5" y="811.5">+ renderText(text: const std::string&amp;, window: const std::shared_ptr&lt;const Window&amp;&gt;, color: uint32_t) const</text><text x="3377.5" y="825.5">+ Font(path: const std::string&amp;, ptSize: int)</text></g><path d="M 3280 810 L 3320 810 L 3320 500" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2930 791 L 2930 765 L 3280 765 L 3280 791" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2930 791 L 2930 855 L 3280 855 L 3280 791" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2930 791 L 3280 791" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3104.5" y="782.5">Event</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2934-796-342-24-0)" font-size="12px"><text x="2935.5" y="808.5">- m_window: const std::shared_ptr&lt;Window&gt;</text></g><path d="M 2930 819 L 3280 819" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2934-828-342-32-0)" font-size="12px"><text x="2935.5" y="840.5">+ Event(window: const std::shared_ptr&lt;Window&gt;&amp;)</text></g><path d="M 3368 870 L 3368 850 L 3286.37 850" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3281.12 850 L 3288.12 846.5 L 3286.37 850 L 3288.12 853.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3198 896 L 3198 870 L 3538 870 L 3538 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3198 896 L 3198 970 L 3538 970 L 3538 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3198 896 L 3538 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3367.5" y="887.5">DrawEvent</text></g><path d="M 3198 900 L 3538 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3202-909-332-66-0)" font-size="12px"><text x="3203.5" y="921.5">+ DrawEvent(subscribeEvent: bool)</text><text x="3203.5" y="935.5">+ ~DrawEvent();</text><text x="3203.5" y="949.5">+ subscribe() final: void</text><text x="3203.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 3020 870 L 3020 861.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3020 856.12 L 3023.5 863.12 L 3020 861.37 L 3016.5 863.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 896 L 2850 870 L 3190 870 L 3190 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 896 L 2850 970 L 3190 970 L 3190 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 896 L 3190 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3019.5" y="887.5">LeftClickEvent</text></g><path d="M 2850 900 L 3190 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-909-332-66-0)" font-size="12px"><text x="2855.5" y="921.5">+ LeftClickEvent(subscribeEvent: bool)</text><text x="2855.5" y="935.5">+ ~LeftClickEvent();</text><text x="2855.5" y="949.5">+ subscribe() final: void</text><text x="2855.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 3720 870 L 3720 850 L 3286.37 850" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3281.12 850 L 3288.12 846.5 L 3286.37 850 L 3288.12 853.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3550 896 L 3550 870 L 3890 870 L 3890 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3550 896 L 3550 970 L 3890 970 L 3890 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3550 896 L 3890 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3719.5" y="887.5">WindowResizedEvent</text></g><path d="M 3550 900 L 3890 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3554-909-332-66-0)" font-size="12px"><text x="3555.5" y="921.5">+ WindowResizedEvent(subscribeEvent: bool)</text><text x="3555.5" y="935.5">+ ~WindowResizedEvent();</text><text x="3555.5" y="949.5">+ subscribe() final: void</text><text x="3555.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 4080 870 L 4080 850 L 3286.37 850" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3281.12 850 L 3288.12 846.5 L 3286.37 850 L 3288.12 853.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3910 896 L 3910 870 L 4250 870 L 4250 896" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3910 896 L 3910 970 L 4250 970 L 4250 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3910 896 L 4250 896" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="4079.5" y="887.5">WindowClosedEvent</text></g><path d="M 3910 900 L 4250 900" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-3914-909-332-66-0)" font-size="12px"><text x="3915.5" y="921.5">+ WindowClosedEvent(subscribeEvent: bool)</text><text x="3915.5" y="935.5">+ ~WindowClosedEvent();</text><text x="3915.5" y="949.5">+ subscribe() final: void</text><text x="3915.5" y="963.5">+ unsubscribe() final: void</text></g><path d="M 2850 1030 L 2830 1030 L 2830 840 L 2923.63 840" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2928.88 840 L 2921.88 843.5 L 2923.63 840 L 2921.88 836.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 1006 L 2850 980 L 3190 980 L 3190 1006" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 1006 L 2850 1080 L 3190 1080 L 3190 1006" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2850 1006 L 3190 1006" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="3019.5" y="997.5">KeyPressedEvent</text></g><path d="M 2850 1010 L 3190 1010" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2854-1019-332-66-0)" font-size="12px"><text x="2855.5" y="1031.5">+ KeyPressedEvent(subscribeEvent: bool)</text><text x="2855.5" y="1045.5">+ ~KeyPressedEvent();</text><text x="2855.5" y="1059.5">+ subscribe() final: void</text><text x="2855.5" y="1073.5">+ unsubscribe() final: void</text></g><path d="M 3300 650 L 3662 650 L 3662 680" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 3480 360 L 3490 360 L 3510 360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 1900 10 L 2230 10 L 2850 10" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2440 50 L 2435 50 L 2435 10 L 1900 10" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240 406 L 2240 380 L 2630 380 L 2630 406" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240 406 L 2240 700 L 2630 700 L 2630 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240 406 L 2630 406" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" font-weight="bold" pointer-events="none" text-anchor="middle" font-size="12px"><text x="2434.5" y="397.5">Menu</text></g><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2244-411-382-174-0)" font-size="12px"><text x="2245.5" y="423.5">- m_player1Selection: uint8_t</text><text x="2245.5" y="437.5">- m_player2Selection: uint8_t</text><text x="2245.5" y="451.5">- m_game: Game&amp;</text><text x="2245.5" y="465.5">- m_round: std::shared_ptr&lt;GameRound&gt;</text><text x="2245.5" y="479.5">- m_background: TextureDrawable </text><text x="2245.5" y="493.5">- m_title: TextureDrawable</text><text x="2245.5" y="507.5">- m_playButton: TextureDrawable</text><text x="2245.5" y="521.5">- m_vs: TextureDrawable</text><text x="2245.5" y="535.5">- m_player1Text: TextureDrawable</text><text x="2245.5" y="549.5">- m_player2Text: TextureDrawable</text><text x="2245.5" y="563.5">- m_continueButton: TextureDrawable</text><text x="2245.5" y="577.5">- m_actorNames: const char*[4]</text></g><path d="M 2240 584 L 2630 584" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g fill="rgb(0, 0, 0)" font-family="Helvetica" pointer-events="none" clip-path="url(#mx-clip-2244-593-382-112-0)" font-size="12px"><text x="2245.5" y="605.5">+ adjustSizePlayer1(width: int, height: int): void</text><text x="2245.5" y="619.5">+ adjustSizePlayer2(width: int, height: int): void</text><text x="2245.5" y="633.5">+ onWindowResized(width: int, height: int): void</text><text x="2245.5" y="647.5">+ onLeftClick(x: uint32_t, y: uint32_t): void</text><text x="2245.5" y="661.5">+ Menu(window: const std::shared_ptr&lt;Window&gt;, game: Game)</text><text x="2245.5" y="675.5">+ draw(): void</text><text x="2245.5" y="689.5">+ reset(): void</text></g><path d="M 2630 493 L 2750 493 L 2750 810 L 2930 810" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 2240 493 L 2220 493 L 2220 360 L 2240 360" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>